package com.leo.main;

/**
 * Class to represent the ASTs generated by the {@link BooleanLogicParser},
 * each subclass corresponding to a non-terminal in the grammar.
 */
public abstract class Expr {
    public static class UnaryOperation extends Expr {
        final Expr expression;
        public UnaryOperation(Expr expression) {
            this.expression = expression;
        }
    }

    public static class BinaryOperation extends Expr {
        final Expr left;
        final Token operator;
        final Expr right;
        public BinaryOperation(Expr left, Token operator, Expr right) {
            this.left = left;
            this.operator = operator;
            this.right = right;
        }
    }

    public static class Grouping extends Expr {
        final Expr expression;
        public Grouping(Expr expression) {
            this.expression = expression;
        }
    }

    public static class Proposition extends Expr {
        final PropositionName propositionName;
        public Proposition(PropositionName propositionName) {
            this.propositionName = propositionName;
        }
    }
}
